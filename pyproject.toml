[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloudviz"
version = "1.0.0"
description = "Multi-cloud infrastructure visualization platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CloudViz Team", email = "team@cloudviz.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
    "Topic :: Scientific/Engineering :: Visualization",
]
keywords = ["cloud", "visualization", "azure", "aws", "gcp", "infrastructure", "diagram"]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.4.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "httpx>=0.25.0,<1.0.0",
    "aiofiles>=23.2.0,<24.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "pyyaml>=6.0.1,<7.0.0",
    "typer>=0.9.0,<1.0.0",
    "rich>=13.6.0,<14.0.0",
    "structlog>=23.2.0,<24.0.0",
    "azure-identity>=1.15.0,<2.0.0",
    "azure-mgmt-resource>=23.0.1,<24.0.0",
    "azure-mgmt-compute>=30.3.0,<31.0.0",
    "azure-mgmt-network>=25.2.0,<26.0.0",
    "azure-mgmt-storage>=21.1.0,<22.0.0",
    "azure-mgmt-sql>=3.0.1,<4.0.0",
    "azure-storage-blob>=12.19.0,<13.0.0",
    "sqlalchemy>=2.0.23,<3.0.0",
    "alembic>=1.13.0,<2.0.0",
    "redis>=5.0.1,<6.0.0",
    "hiredis>=2.2.3,<3.0.0",
    "pillow>=10.1.0,<11.0.0",
    "cairosvg>=2.7.1,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "black>=23.11.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.1,<2.0.0",
    "bandit>=1.7.5,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
]
aws = [
    "boto3>=1.34.0,<2.0.0",
]
gcp = [
    "google-cloud-resource-manager>=1.10.4,<2.0.0",
    "google-cloud-compute>=1.15.0,<2.0.0",
    "google-cloud-storage>=2.10.0,<3.0.0",
]
all = [
    "cloudviz[aws,gcp]",
]

[project.urls]
Homepage = "https://github.com/yourusername/cloudviz"
Documentation = "https://cloudviz.readthedocs.io"
Repository = "https://github.com/yourusername/cloudviz.git"
Issues = "https://github.com/yourusername/cloudviz/issues"
Changelog = "https://github.com/yourusername/cloudviz/blob/main/CHANGELOG.md"

[project.scripts]
cloudviz = "cloudviz.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["cloudviz*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
cloudviz = [
    "providers/azure/powershell/*.psm1",
    "api/templates/*.html",
    "py.typed",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "azure.*",
    "boto3.*",
    "google.*",
    "structlog.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cloudviz"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
