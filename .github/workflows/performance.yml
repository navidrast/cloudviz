name: Performance Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM

jobs:
  performance-test:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: cloudviz_perf
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-perf-${{ hashFiles('requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-perf-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
    
    - name: Run performance benchmarks
      env:
        DATABASE_URL: postgresql://postgres:test@localhost:5432/cloudviz_perf
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-performance
        JWT_SECRET_KEY: test-jwt-secret-performance
      run: |
        pytest tests/performance/ -v --benchmark-only --benchmark-json=benchmark-results.json
      continue-on-error: true
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ github.sha }}
        path: benchmark-results.json
    
    - name: Performance regression check
      if: github.event_name == 'pull_request'
      run: |
        python scripts/check_performance_regression.py benchmark-results.json
      continue-on-error: true
    
    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const benchmarkData = JSON.parse(fs.readFileSync('benchmark-results.json', 'utf8'));
            const comment = `## ðŸš€ Performance Benchmark Results
            
            | Benchmark | Mean Time | Standard Deviation |
            |-----------|-----------|-------------------|
            ${benchmarkData.benchmarks.map(b => 
              `| ${b.name} | ${b.stats.mean.toFixed(4)}s | ${b.stats.stddev.toFixed(4)}s |`
            ).join('\n')}
            
            *Performance results for commit ${context.sha.substring(0, 7)}*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not post performance results:', error);
          }

  load-test:
    name: Load Testing
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run K6 load test
      uses: grafana/k6-action@v0.3.1
      with:
        filename: tests/load/api-load-test.js
      env:
        API_BASE_URL: http://localhost:8000
      continue-on-error: true
    
    - name: Upload load test results
      uses: actions/upload-artifact@v4
      with:
        name: load-test-results-${{ github.sha }}
        path: load-test-results.json